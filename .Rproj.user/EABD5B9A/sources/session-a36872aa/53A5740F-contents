---
title: ""
output: html_document
# output: 
#   html_document:
#     # theme: simplex
#     # toc: yes
#     toc_float:
#       collapsed: true
---

<center>

![](img/pl.png)

</center>

<center> <h1>FPL Contender's League (#255511)</h1></center>
<center> <h4>Dashboard Lite</h4></center>

```{r echo=FALSE}
print(paste0("Last Update: ",Sys.Date()))
```


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo=FALSE,message=FALSE,warning = FALSE)

# Setting Up
library(tidyverse)
library(plotly)
# library(shiny)
library(ggbump)
library(formattable)
library(ggrepel)
```

# Weekly Performers  

<br>
<br>

```{r fig.width = 10, fig.align = "center"}
# Data
data_1 = readRDS("data/1_gw_weekly_scores.RDS")
# # Value for Slider
# slider_1_max_val = max(data_1$event)
current_gw = max(data_1$event)
# 
# shinyApp(
#   
#   ui = fluidPage(
#     sliderInput(inputId = "p1_slider",
#                 label = h4("Gameweek:"),
#                 min = 1,max = slider_1_max_val,value = slider_1_max_val,
#                 step = 1,round = T),
#     plotOutput("p1_plot_avg")
#   ),
#   
#   server = function(input, output) {
#     
#     output$p1_plot_avg = renderPlot({
#       
#       data_1_avg = unique(data_1$average_entry_score)
#       data_1_avg = data_1 %>% filter(event == input$p1_slider) %>% distinct(average_entry_score) %>% pull()
#       
#       ggplot(subset(data_1,event == input$p1_slider),aes(x=reorder(name,-points),y=points,fill = above_avg))+
#         geom_bar(color = 'black',stat = 'identity')+
#         geom_text(aes(label = points),position = position_stack(vjust = .5)) +
#         geom_hline(yintercept = data_1_avg)+
#         # geom_text(aes(nrow(data_1)-2,data_1_avg+2,label = "Average",vjust = -1))+
#         scale_fill_manual(values = c(
#           "Above Average" = "green",
#           "Below Average" = "red"
#         ),name = "Average")+
#         theme_minimal()+
#         theme(plot.title = element_text(face='bold'),
#               axis.title = element_text(face='bold'),
#               axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
#         labs(title = paste0("Gameweek ",input$p1_slider," Performance"),
#              y = "Points",x = "Participants")
#     })
#   },
#   
#   options = list(height = 500)
# )

data_1_avg = data_1 %>% filter(event == current_gw) %>% distinct(average_entry_score) %>% pull()

ggplot(subset(data_1,event == current_gw),aes(x=reorder(name,-points),y=points,fill = above_avg))+
  geom_bar(color = 'black',stat = 'identity')+
  geom_text(aes(label = points),position = position_stack(vjust = .5)) +
  geom_hline(yintercept = data_1_avg)+
  # geom_text(aes(nrow(data_1)-2,data_1_avg+2,label = "Average",vjust = -1))+
  scale_fill_manual(values = c(
    "Above Average" = "#06d6a0",
    "Below Average" = "#ef476f"
  ),name = "Average")+
  theme_minimal()+
  theme(plot.title = element_text(face='bold'),
        axis.title = element_text(face='bold'),
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
  labs(title = paste0("Gameweek ",current_gw," Performance"),
       y = "Points",x = "Participants")

```


# Current Standings {.tabset}

## By Standing

How do you rank against participants in our league?

```{r fig.width = 10, fig.align = "center"}
data_1 = data_1 %>% group_by(event) %>% 
  mutate(weekly_league_rank = as.integer(min_rank(desc(total_points))),
         p2_label = ifelse(event == current_gw,name,NA_character_))
# p2_teks_pos = length(unique(data_1$name))

cur_gw = max(data_1$event)

plot2 = ggplot(data_1,aes(x=event,y=weekly_league_rank,color = name,group = name))+
        geom_bump() +
        scale_y_continuous(trans = "reverse",breaks = c(1:length(unique(data_1$name)))) +
        scale_x_continuous(breaks = c(1:cur_gw))+
        geom_text(
          aes(label = p2_label),
          x = cur_gw,
          nudge_x = 2,nudge_y = .25,
          size = 3
        ) +
        theme_bw()+
        theme(plot.title = element_text(face='bold'),
              axis.title = element_text(face='bold'),
              legend.position = 'none'
              )+
        labs(title = paste0("Weekly Ranking Within Mini-League"),
             y = "League Standing",x = "Gameweek")

# ggplotly(plot2)
plot2
```

## Global Ranking

How do you rank against the global players?

```{r fig.width = 10,fig.height=8,fig.align = "center"}
plot2_b = ggplot(data_1,aes(x=event,y=overall_rank,color = name,group = name))+
        geom_line() +
        scale_y_continuous(trans = "reverse",labels = scales::comma,
                           limits = c(max(data_1$overall_rank),10000),
                           breaks = c(10000,100000,500000,1000000,5000000,max(data_1$overall_rank))) +
  scale_x_continuous(breaks = c(1:cur_gw))+
  geom_label_repel(
    aes(label = p2_label),
    x = cur_gw,
    nudge_x = 2,nudge_y = .25,
    size = 3
  ) +
  theme_bw()+
  theme(plot.title = element_text(face='bold'),
        axis.title = element_text(face='bold'),
        legend.position = 'none'
        )+
  labs(title = paste0("Weekly Overall Ranking"),
       y = "League Standing",x = "Participants")

# ggplotly(plot2_b)
plot2_b
```


# Details {.tabset}

## Captaincy

```{r fig.width = 10, fig.align = "center"}

participant_teams = readRDS("data/2_participant_team_df.RDS")
player_details = readRDS("data/2_fpl_player_stats_2324.RDS")

data_3 = participant_teams %>% filter(is_captain == TRUE)
captain_details = player_details %>% select(playername,web_name,total_points,'event' = round) %>% filter(playername %in% data_3$playername)

data_3 = left_join(data_3,captain_details,by = c('playername','event'))
p3_datamin = current_gw-5

data_3_last_5 = data_3 %>% filter(event %in% c(p3_datamin:current_gw))



plot3 = ggplot(data_3_last_5,aes(x = event,y = participant_name, fill = total_points))+
  geom_tile(color = 'black')  +
  scale_fill_distiller(palette = "YlOrRd",direction = 1,name = "Total Points") +
  scale_x_continuous(breaks = c(p3_datamin:cur_gw))+
  geom_text(aes(x = event,y = participant_name,label = web_name)) +
  # scale_fill_gradientn(colours = c("white", "white", "yellow"), values = c(NA,0,1)) +
  theme_bw()+
  guides(fill = guide_colorsteps(barwidth = unit(0.5,"cm"),
                                 barheight = 15,
                                 title = "Total\nPoints",
                                 title.position = "top"))+
  theme(plot.title = element_text(face='bold'),
        axis.title = element_text(face='bold'),
        axis.text = element_text(face='bold'),
        legend.title = element_text(face='bold'),
        legend.text = element_text(face='bold'),
        # legend.position = 'bottom',
        legend.background = element_rect(fill = NA,size = 0.5,linetype = 'solid',colour = 'black'),
        )+
  labs(x="Gameweek",y="Manager",
       title = "Captaincy Choice by Gameweek",
       subtitle = "Color Indicates Points Obtained")

# ggplotly(plot3)
plot3

```


## Team Comparison

```{r fig.width = 15,fig.height=8}
teams_this_gw = participant_teams %>% filter(event == current_gw) %>% rename("pos_infield" = position) %>% 
  left_join(player_details %>% select(playername,web_name,position) %>% distinct(playername,.keep_all = T)) %>% 
  mutate(pos_in_field = case_when(
    pos_infield %in% c(1:11) ~ as.character(pos_infield),
    pos_infield == 12 ~ "Sub Keeper",
    pos_infield == 13 ~ "Sub 1",
    pos_infield == 14 ~ "Sub 2",
    pos_infield == 15 ~ "Sub 3"
  ),
  pos_in_field = factor(pos_in_field,levels = c(as.character(1:11),"Sub Keeper","Sub 1","Sub 2","Sub 3")),
  web_name2 = case_when(
    is_captain == TRUE ~ paste0(web_name," (C)"),
    is_vice_captain == TRUE ~ paste0(web_name," (V)"),
    TRUE~web_name
  ),
  position2 = case_when(
    pos_in_field %in% c("Sub Keeper","Sub 1","Sub 2","Sub 3") ~ "Bench",
    TRUE ~ position
  ))


plot4 = ggplot(teams_this_gw,aes(x = participant_name,y = forcats::fct_rev(pos_in_field), fill = position2))+
  geom_tile(color = 'black')  +
  scale_fill_manual(
    values = c(
      "GKP" = "#06d6a0",
      "DEF" = "#118ab2",
      "MID" = "#ffd166",
      "FWD" = "#ef476f",
      "Bench" = "#c9ada7"
    ),name = "Position"
  )+
  # scale_fill_distiller(palette = "YlOrRd",direction = 1,name = "Total Points") +
  geom_text(aes(x = participant_name,y = pos_in_field,label = web_name2),size = 3.5) +
  # scale_fill_gradientn(colours = c("white", "white", "yellow"), values = c(NA,0,1)) +
  theme_minimal()+
  theme(plot.title = element_text(face='bold'),
        axis.title = element_text(face='bold'),
        axis.text = element_text(face='bold'),
        # legend.position = 'none',
        legend.title = element_text(face='bold'),
        legend.text = element_text(face='bold'),
        )+
  labs(x="Manager",y="Lineup",
       title = paste0("Gameweek ",current_gw," Teams"),
       subtitle = "Color Indicates Position")

# ggplotly(plot4)
plot4
```


## Chip Tracker

```{r fig.width = 10, fig.align = "center"}
chip_tracker_df = readRDS("data/3_chip_tracker.RDS")

ggplot(chip_tracker_df,aes(x = chip,y = manager_name, fill = val))+
  geom_tile(color = 'black') + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  scale_fill_gradientn(colours = c("white", "blue", "yellow"), values = c(NA,0,1)) +
   geom_text(aes(x = chip,y = manager_name,label = event)) +
  theme_bw()+
  theme(plot.title = element_text(face='bold'),
        axis.title = element_text(face='bold'),
        axis.text = element_text(face='bold'),
        legend.position="none") +
  labs(x="Chips",y="Manager",
       title = "FPL Chip Usage Tracker")

```


## Transfer

```{r fig.width = 10}
transfers = readRDS("data/4_fpl_transfers.RDS")

transfers_latest = transfers %>% filter(gw == current_gw) %>% select(-c(id_in,id_out)) %>% rename('manager' = participant_name)
formattable(transfers_latest,list(
  player_out = color_bar('#f28482'),
  player_in = color_bar('#80ed99'),
  gw = color_bar('#e9c46a'),
  manager = color_bar('#48cae4')
))
```


## Disclaimer

This dashboard is a non-profit production. This is specifically made for the fun of participants in our mini-league.

Much gratitude owed to the participants in the past 3 season.

This dashboard is possible through the FPL API and the amazing work of [Wiscostret's fplscrapR](https://github.com/wiscostret/fplscrapR)

This static dashboard was created in `rmarkdown` and put up by `GitHub Pages`